version: '3'

x-backend-common: &backend-common
  image: themenschaedel/backend:dev
  build:
    context: .
    dockerfile: docker/Dockerfile
  depends_on:
    - mysql
    - redis
  environment:
    WWWUSER: '${WWWUSER}'
  volumes:
    - '.:/var/www'
  env_file: ./.env
  networks:
    - themenschaedel
  restart: unless-stopped

services:
  app:
    <<: *backend-common
    ports:
      - '${APP_PORT:-80}:8080'

  scheduler:
    <<: *backend-common
    entrypoint: start scheduler
    depends_on:
      - app

  worker:
    <<: *backend-common
    restart: unless-stopped
    entrypoint: start worker
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - themenschaedel
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]

  redis:
    image: redis:alpine
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - redis:/data
    networks:
      - themenschaedel
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  search:
    image: getmeili/meilisearch:latest
    ports:
      - '${FORWARD_SEARCH_PORT:-7700}:7700'
    volumes:
      - search:/data.ms
    networks:
      - themenschaedel
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - themenschaedel

networks:
  themenschaedel:

volumes:
  mysql:
    driver: local
  redis:
    driver: local
  search:
    driver: local
